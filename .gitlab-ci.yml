stages:
  - prerequisites
  - build
  - buildAWS
  - deploy

variables:
  ENV: prod
  IMAGE: registry.gitlab.com/roeidalal/flask-project

install_docker_engine:
  stage: prerequisites
  tags: 
    - $ENV
  script:
    - sudo amazon-linux-extras install docker -y
    - sudo systemctl start docker
    - sudo systemctl enable docker
    - sudo usermod -a -G docker gitlab-runner
    - sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
    - sudo chmod +x /usr/local/bin/docker-compose
    - sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
  when: manual


gitlab_image_push:
  stage: build
  tags:
    - $ENV
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE .
    - docker push $IMAGE
  when: manual

aws_image_push:
  stage: buildAWS
  tags:
    - $ENV
  script:
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 393952290553.dkr.ecr.us-east-1.amazonaws.com
    - docker build -t rdk-images .
    - docker tag rdk-images:latest 393952290553.dkr.ecr.us-east-1.amazonaws.com/rdk-images:latest
    - docker push 393952290553.dkr.ecr.us-east-1.amazonaws.com/rdk-images:latest
  when: manual

deploy_application:
  stage: deploy
  tags:
    - $ENV
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker-compose up -d
  when: manual